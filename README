# API de Predicción de Muertes por Demencia

¡Bienvenida/o a mi proyecto! Aquí he desarrollado una API con **FastAPI** que te permite predecir el número de muertes por demencia en países europeos. La idea es sencilla: he combinado un front-end simple (una página HTML en la carpeta `static`) con un back-end robusto que se encarga de procesar las solicitudes y realizar las predicciones.

Mi modelo, basado en **XGBoost**, utiliza diversas variables (como la concentración anual de NO₂, la esperanza de vida, la actividad física, la desigualdad de ingresos y el porcentaje de sobrepeso, entre otras) para estimar de forma precisa el número de muertes por demencia.

## ¿Qué Ofrezco?

- **Modelo Predictivo Inteligente:** Se vale de variables clave para hacer predicciones acertadas.
- **Integración Front-end y Back-end:** Una interfaz web sencilla y endpoints listos para interactuar con el modelo.
- **Despliegue Sencillo con Docker:** Un `Dockerfile` incluido te permite empaquetar y desplegar toda la aplicación sin complicaciones.
- **Ejecución en Producción con Gunicorn:** Puedes optar por un despliegue en producción usando **Gunicorn** junto a **Uvicorn** para un rendimiento óptimo.


## Estructura del Proyecto

La estructura del repositorio es la siguiente:

TFM/ ├── Dockerfile ├── requirements.txt ├── main.py ├── best_xgb_model.pkl ├── scaler.pkl └── static/ └── index.html


## Requisitos

- [Docker](https://docs.docker.com/get-docker/) instalado en tu sistema.
- (Opcional) Python 3.9 o superior si deseas ejecutar la aplicación localmente sin Docker.
- (Opcional) Gunicorn y Uvicorn para ejecución en producción sin Docker.

## Cómo Empezar

### Clona el Repositorio

Abre tu terminal y ejecuta:

```bash
git clone https://github.com/tu-usuario/tu-repositorio.git
cd tu-repositorio

#Instalar las dependencias (para ejecución local sin Docker):
pip install -r requirements.txt


##Para construir y ejecutar la aplicación dentro de un contenedor Docker, sigue estos pasos:

Construir la imagen Docker:
docker build -t api-dementia .

Ejecutar el coentenedor
docker run -d -p 8000:8000 api-dementia

La aplicación estará disponible en http://localhost:8000.

##Ejecución con Gunicorn
Si prefieres ejecutar la aplicación en producción usando Gunicorn con workers de Uvicorn, sigue estos pasos:

Instala Gunicorn y Uvicorn (si aún no lo tienes):

pip install gunicorn uvicorn

Ejecuta la aplicación con Gunicorn:

gunicorn main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000

Con este comando, la aplicación se ejecutará en el puerto 8000 y estará disponible en http://localhost:8000.

##Descripción del Modelo
El modelo predictivo está basado en XGBoost y utiliza las siguientes variables:

Country: Nombre del país (informativo).
Year: Año de la predicción.
Annual_Mean_NO2_Concentration: Concentración anual media de NO2.
life_expectancy: Esperanza de vida.
Avg_Percentage_Activity: Promedio del porcentaje de actividad física.
Ratio_annual_of_inequality_income: Relación anual de desigualdad de ingresos.
percentage_of_overweight_BMI: Porcentaje de personas con sobrepeso (según BMI).
sex_Males: Indicador binario para género (0 para mujeres y 1 para hombres).
Interaction_LifeExpectancy_Activity: Valor calculado como la interacción entre life_expectancy y Avg_Percentage_Activity (se calcula automáticamente).
El modelo toma estas variables, las escala utilizando un escalador preentrenado (scaler.pkl), y realiza la predicción del número de muertes por demencia utilizando un modelo XGBoost (best_xgb_model.pkl).

Contribuciones
Tus aportaciones son muy valiosas para mí. Si crees que la aplicación puede mejorar, si encuentras algún problema o tienes ideas para nuevos cambios, te invito a abrir un issue o a crear un pull request. ¡Muchas gracias!

